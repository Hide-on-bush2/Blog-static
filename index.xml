<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hello, Faker on Hide on bush</title>
    <link>https://hide-on-bush2.gitee.io/</link>
    <description>Recent content in Hello, Faker on Hide on bush</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Sep 2020 11:00:59 -0400</lastBuildDate><atom:link href="https://hide-on-bush2.gitee.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Data Representation</title>
      <link>https://hide-on-bush2.gitee.io/homework/homework3/</link>
      <pubDate>Mon, 21 Sep 2020 11:00:59 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/homework/homework3/</guid>
      <description>H3-Data Representation 第一题-计算  (2)int8_t x = 0xd3 = 1101 0011出现溢出错误 (4)int9_t z = y - x出现溢出错误，因为y是负数，x是正数，那么z应该是负数，但最后的结果是z = 0111 1010是正数 (7)float x = 0.45存在精度误差  第二题-名词解释 Method of complements In mathematics and computing, the method of complements is a technique to encode a symmetric range of positive and negative integers in a way that they can use the same algorithm (hardware) for addition throughout the whole range. For a given number of places half of the possible representations of numbers encode the positive numbers, the other half represents their respective additive inverses.</description>
    </item>
    
    <item>
      <title>Data Representation II</title>
      <link>https://hide-on-bush2.gitee.io/homework/homework4/</link>
      <pubDate>Mon, 21 Sep 2020 11:00:59 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/homework/homework4/</guid>
      <description>H4-Data Representation II 第一题-名词解释 ASCII ASCII (/ˈæskiː/ (About this soundlisten) ASS-kee),[3]:6 abbreviated from American Standard Code for Information Interchange, is a character encoding standard for electronic communication. ASCII codes represent text in computers, telecommunications equipment, and other devices. Most modern character-encoding schemes are based on ASCII, although they support many additional characters.
ASCII（发音： /ˈæski/ ASS-kee[1]，American Standard Code for Information Interchange，美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统。它主要用于显示现代英语，而其扩展版本延伸美国标准信息交换码则可以部分支持其他西欧语言，并等同于国际标准ISO/IEC 646。
Color Color (American English), or colour (Commonwealth English), is the characteristic of visual perception described through color categories, with names such as red, orange, yellow, green, blue, or purple.</description>
    </item>
    
    <item>
      <title>Gates and Circuits</title>
      <link>https://hide-on-bush2.gitee.io/homework/homework5/</link>
      <pubDate>Mon, 21 Sep 2020 11:00:59 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/homework/homework5/</guid>
      <description>H5-Gates and Circuits 回答问题   Give the three representations of an AND gate and say in your words what AND means
 布尔表达式：$X = AB$ 真值表：    A B X     0 0 0   0 1 0   1 0 0   1 1 1     逻辑图：     Give the three representations of an XOR gate and say in your words what XOR means</description>
    </item>
    
    <item>
      <title>Number system</title>
      <link>https://hide-on-bush2.gitee.io/homework/homework2/</link>
      <pubDate>Tue, 15 Sep 2020 11:00:59 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/homework/homework2/</guid>
      <description>H2-The Number System Base Conversion  1 minute 12 seconds = 72 seconds = 7.2e4 ms (7A)_13 = 7 * 13 + 10 = 101 (7A)_16 = 7 * 16 + 10 = 122 (7A)_16 = (0111)(1010)_2 = (172)_8 (1011011)_2 = (133)_8 = (5B)_16 (678)_10 = (1010100110)_2 = (1246)_8 (111)_2 + (101)_2 = (100)_2  Word Explanation Infomation Information can be thought of as the resolution of uncertainty; it is that which answers the question of &amp;ldquo;What an entity is&amp;rdquo; and thus defines both its essence and nature of its characteristics.</description>
    </item>
    
    <item>
      <title>每周论文分享-2</title>
      <link>https://hide-on-bush2.gitee.io/paper/week2/</link>
      <pubDate>Tue, 15 Sep 2020 11:00:59 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/paper/week2/</guid>
      <description>Week2-Adaptive Federated Learning in Resource Constrained Edge Computing Systems 一篇研究如何在有限的资源条件下进行联邦学习的论文，涉及到比较多的数学知识
问题背景 如何有效利用给定数量的资源以最小化模型训练的损失函数。也就是对于传统的联邦学习机制，如何确定总的训练轮次$T$和全局模型的更新周期$\tau$($T = K\tau$，也就是每经过$\tau$轮次进行一次全局模型的更新)的最佳值，从而使得全局损失函数在此学习任务的给定资源约束下最小化，也就是说$T$和$\tau$的值具有一定的次数限制。可以将优化问题定义为： $$ min_{\tau, K \in {1, 2, 3, &amp;hellip;}}F(w^f), \
s.t. (T+1)c_m + (k+1)b_m &amp;lt;= R_m, \forall m \in {1, &amp;hellip;, M}, T = K\tau $$
核心思想 通过在训练过程中改变$\tau$的值，来动态调整全局模型更新的周期，并控制$T$的值，使得在资源有限的情况下保证训练的轮次尽可能多
假设我们的学习目标：$w^* = argmin_wF(w)$，也就是理论上使得$F(w)$最小的那个值，论文先给出一个$F(w^f) - F(w^*)$的收敛上届，然后进一步提出一个适用于以上问题的优化算法。
$F(w^f) - F(w^*)$的收敛上界 首先进行一些预定义，将$T$个迭代轮次分为$k$个间隔，以全局模型更新作为划分的点
 用$[k]$表示间隔$[(k-1)\tau, k\tau]$ 定义一个辅助参数：$v_{[k]}(t)$，计算方法为$v_{[k]}(t) = v_{[k]}(t - 1) - \eta \nabla F(v_{[k]}(t))$，为后面的证明服务，其中$t \in {(k-1)\tau, k\tau }$ 这个辅助参数会定时更新，即$v_{[k]}((k-1)\tau) = w({k-1}\tau)$  接下来求解$F(w^f) - F(w^*)$的收敛上界，分为两个步骤：</description>
    </item>
    
    <item>
      <title>每周论文分享-3</title>
      <link>https://hide-on-bush2.gitee.io/paper/week3/</link>
      <pubDate>Tue, 15 Sep 2020 11:00:59 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/paper/week3/</guid>
      <description>Blockchain-Federated-Learning and Deep Learning Models for COVID-19 detection using CT Imaging 这是一篇很有意思的论文，讲如何利用胶囊网络/联邦学习/区块链来帮助医生诊断新冠患者
背景 一般来说，对一名疑似患者进行诊断是否真正患有新冠肺炎需要耗费大量的时间和医疗费用。在这种情况下，用CT图片来训练一个AI模型，然后用该模型来进行诊断则显得廉价得多。但是数据的收集是一个主要的问题，不同的医疗机构之间存在着严重的“数据孤岛“问题，将所有的CT图片集中在一个医疗机构显得不太现实，也很难实现。这时候利用联邦学习可以在各个医疗机构不需要暴露它们的数据的前提下训练出一个令人满意的AI模型，来提升诊断的准确率和降低诊断的成本
核心思想 AI模型用的是胶囊网络，用联邦学习保证数据的隐私性，将每一次全局更新看成是一项交易，共识算法用的是工作量证明(PoW)
胶囊网络 使用CapsNet而不是CNN的原因是前者的效果更好，并且能达到举一反三的效果
它和一般的ANN(Artificail Neural Network)也非常像，只不过将映射的方式和激活函数等换了一下：
联邦学习 使用的是一般的联邦学习架构：
在这篇论文中将联邦学习与区块链进行结合，训练方法为：
区块链 区块链还可以用来进行数据共享。由于将患者的数据放到区块链上花销过于巨大，因此将数据保存在医疗机构中，区块链用来帮助检索这些数据。当一个医院提供数据时，它会在区块链中发起一项交易。每一个数据共享和检索过程的交易过程如下图所示：
多家医院可以协作共享数据并训练模型以预测最佳的结果，并且这种数据共享和数据检索的过程可以通过区块链的技术来保证数据的隐私性，数据共享的过程如下图所示：
总结 个人觉得这篇文章非常有意思，也非常地有意义。这篇文章提供了一种将联邦学习和区块链技术结合起来的思路（这件事并不是很简单，因为联邦学习需要一个中心服务器，而区块链是去中心化的）。此外，我觉得新冠诊断这个场景与联邦学习非常契合，在医疗这方面联邦学习确实有着广泛的应用。</description>
    </item>
    
    <item>
      <title>每周论文分享-4</title>
      <link>https://hide-on-bush2.gitee.io/paper/week4/</link>
      <pubDate>Tue, 15 Sep 2020 11:00:59 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/paper/week4/</guid>
      <description>ON THE CONVERGENCE OF FEDAVG ON NON-IID DATA 这篇论文给出了不需要分布数据集是IID的假设的一个收敛上界
背景 现有的联邦学习关于收敛性证明的工作需要有以下两个假设：
 分布在不同的设备上的数据集是IID的 参与联邦学习的每一个设备都能与服务器保持稳定的连接  事实上这两个假设在现实部署的过程中是难以实现的，首先，保证不同设备上的数据集都是IID的显然是难以保证的，其次，我们也无法保证参与联邦学习的每一个设备都时刻保持有效的连接，当某一台设备关闭电源或者断开连接的是否，那么服务器和其他设备都需要等待这一台的重启或重新连接，这明显会造成很大的耗费
对于第二个问题的解决办法是每次服务器向设备广播数据集的时候都会选择其中保持连接的一部分设备进行广播然后进行训练，而不是向所有的设备进行广播
贡献 该论文主要有以下两个贡献：
 给出了不需要以上两个假设的两个收敛上界，分别包括Full Device Participation(每次都选择所有的设备来训练)和Partial Device Participation(每次只选择一部分的设备进行训练) 提出全局模型更新的步长需要衰减，并给出解释  收敛上界 这篇论文给出的收敛上界需要满足以下4个假设：
然后它给出的Full Device Participation收敛上界是：
给出的Partial Device Participation收敛上界是：
步长衰减 论文支持，学习率的下降对于非IID环境下FedAvg的效果直观重要，他们提出了下面一条定理：
除此之外，还有一些关于步长对于FedAvg收敛效果的讨论：
 定理1告诉我们，当$E &amp;gt; 1$并且学习步长递减的时候，FedAvg会逐渐收敛到最优 定理4告诉我们，当$E &amp;gt; 1$并且学习步长固定的时候，FedAvg不会收敛到最优  结论 这篇论文给出了不需要数据集为IID的假设的收敛上界，并且关于步长对于收敛性的影响进行了讨论，我觉得是一篇比较有开创性的文章。相关的数学证明我还会继续去研究一下</description>
    </item>
    
    <item>
      <title>每周论文分享-5</title>
      <link>https://hide-on-bush2.gitee.io/paper/week5/</link>
      <pubDate>Tue, 15 Sep 2020 11:00:59 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/paper/week5/</guid>
      <description>Optimal Task Assignment to Heterogeneous Federated Learning Devices 背景 一个联邦学习系统的性能一般受以下两个因素影响：
 每一个训练周期的时间 训练周期的数量  第二个因素主要受到数据集的大小和数量的影响，因此该论文主要关注于第一个因素
在联邦学习的一个训练周期中，一个设备需要花费的时间长短取决于它自身的计算能力和通信的效率。由于参与联邦学习的设备是异构的并且需要将数据同步到中央服务器中，一个训练周期的时间长短便取决于参与联邦学习中需要花费时间最长的设备，这会造成瓶颈，其他设备必须等待这一个最慢的设备才能进行下一轮训练
定义 首先介绍一些定义：
 $T\in N$:相同的、独立的、原子的训练任务，在这里我们可以简单地将其认做所有设备训练次数的总和 $R$:资源的集合，在这里我们可以将其认做为参与到联邦学习中的设备,$i\in R$，其中一个$i$代表一个设备 $A_i$：分配给设备$i$的训练任务的集合。在传统的联邦学习中我们每个训练轮次都会选择$R$中的一部分设备来进行训练，那么设备$i$如果选到进行训练的次数为$t$，则$A_i \triangleq t$ $C_i(A_i)$：设备$i$完成分配给它的训练任务所需要的花销（可以理解为训练时间） $C_{max}$：完成该次联邦学习任务所需要的时间  根据以上定义，我们可以得到以下等式：  等式1：完成一次联邦学习任务所需要的时间等于所有设备中花费最多的时间 等式2：根据$A_i$和$T$的定义可得 等式3：分配给一个设备的训练任务有上界和下界 等式4：$C_i$是非递减函数 等式5：一个简单的加和 等式6：如果分配给一个设备的训练任务超过了它的上界，那它的花销时间为无穷大 等式7，8：$t \leq T$，$C_{max}^T = C_{max}$  算法 该算法会维护一个最小堆，存放的数据结构是$(C_i(A), i)$，也就是设备$i$以及分配给设备$i$的训练任务的一个二元组，整个算法大概是以下步骤：
 首先分配给每个设备$i$它的训练任务的下界：$A_i \leftarrow L_i$ 之后从$l+1$开始，每次从堆中取出一个二元组$(c, j)$，更新这个二元组的值，也就是将第$l+1$个训练任务分配给设备$j$：$A_j \leftarrow A_j + 1$，并且如果这个训练任务并没有超过设备$j$可以承受的最大训练任务数，将它压入栈中 最后输出训练任务的分配方式$A_i$  例子 总结 该论文所介绍的算法算是比较容易可以想到的，个人也觉得有一些局限性，例如：
 我们在使用该算法去分配训练任务的时候，需要提前知道具体某个设备完成某个训练任务的时间 即便我们可以通过该设备上数据集或者通信效率去估算这个时间，但也有着以下问题：  如果某一个设备通信效率很好，那么该算法就会反复选择该设备进行训练，同样，那些通信时间长的设备将几乎不怎么参与到训练中，本论文对这个问题的解决办法仅仅是对每一个设备的训练任务数设定了一个上下界 该算法可能会对资源分配的公平性产生影响    总的来说，该算法虽然可以减少一个联邦学习任务所需要的训练时间，但它同时会牺牲一些训练出来的模型的性能</description>
    </item>
    
    <item>
      <title>Construct3小游戏项目</title>
      <link>https://hide-on-bush2.gitee.io/post/construct3/</link>
      <pubDate>Tue, 15 Sep 2020 22:30:49 +0800</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/post/construct3/</guid>
      <description>用Construct3做一个LOL走a练习小游戏 演示视频：Bilibili
背景 英雄联盟(League of Legends，简称LOL)，也叫撸啊撸，是当代最热门的Moba类游戏。据不完全统计，至2015年7月为止，超过1亿名玩家每个月至少玩一次《英雄联盟》，而每天都玩的玩家超过2700万，高峰时段有超过750万人同时在线。2015年7月，该公司估计全世界每个月有超过1亿5千万名的活跃玩家。LOL已经成为当今史诗级的一款游戏，深受全球玩家喜爱。每年拳头公司举办的英雄联盟全球总决赛，更是成为了一个重量级的电竞赛事，吸引了大量的英雄联盟爱好者前往线下观赛。在现今，不可否认的是，英雄联盟正逐渐成为像篮球、足球一样家喻户晓、老少皆宜的运动项目
ADC(Attack Damage Carry)，是这个游戏中很重要的一个位置，他们主要造成远程物理伤害，能够提供稳定和较高的每秒伤害，是游戏中破坏防御塔的主力和持续伤害输出的主要来源。而玩家需要熟练掌握ADC这个位置，一个很重要的基本功便是走a
”走A“通俗理解便是：边移动边攻击敌人。在LOL这个游戏中，游戏角色发出一个普通攻击(也叫平a)大致需要经过三个过程：攻击前摇，攻击发生，攻击后摇。攻击前摇便是在角色发出普通攻击之前的抬手动作，攻击后摇是角色在发出普通攻击之后的收手动作。攻击前摇和攻击后摇需要一定的施法时间，而这三个过程被成为普通攻击的一个周期。根据游戏机制，我们可以在攻击后摇的时候进行移动，因此我们可以利用这个时间间隔控制游戏角色进行走位，以拉开与敌人的距离或者躲避敌方角色的技能
伊泽瑞尔（Ezreal）是一个需要在当今版本非常强势的ADC英雄，它需要掌控者协调好平a和技能的衔接，因此我用Construct3做了一个EZ的走a练习小游戏，可以提供给广大ADC玩家用来训练自己的走a技巧
游戏玩法 游戏一开始的界面如下： 
玩家可以通过A+鼠标左键的方式对敌方英雄（劫）进行普通攻击，也可以通过Q键向鼠标方向施放技能，每个劫的血量为5,每个普通攻击可以给予劫1点伤害，每个技能可以给予劫2点伤害。劫的血量降到0以下后会被击杀，系统每3秒会在地图中随机产生一个劫，并劫会持续向着玩家（EZ）的方向靠近。玩家可以通过右击鼠标点击地板进行移动，但是在攻击的时候会停止移动。每击杀一个劫，记分板上会增加分数，看看你能拿到多少分数吧！
游戏制作 创建工程 首先进入以下网址：

然后点击New Project,会弹出来以下框框： 
然后我们点击Creat，便可以创建一个工程： 
创建背景图 我们需要创建一个类似召唤师峡谷中的地图，于是我们可以进入英雄联盟训练模式中截取下路兵线交汇处的地图： 
然后点击工程界面的空白处，会弹出： 
我们点击Tiled Background，发现指针变成了十字的模式，点击工程画布的空白处，会弹出： 
在这里我们可以选择背景的样式，我们选择上面工具栏的第二个按钮来导入我们先前截取得到的背景图，可以得到以下结果： 
然后就可以关闭这个窗口啦，因为背景图我们一般是不移动的，我们可以背景，选择把这个背景锁住： 
这样子我们的背景就已经创建完毕了
创建人物 与创建背景图一样，我们双击画布空白处（因为背景图已经锁定了，双击背景图也是可以的），弹出以下窗口： 
我们点击Sprite进行创建，同样会弹出一个空白的模版，与创建背景图相同，我们只需要把抠好的图导入变好啦
在这个游戏中需要的物体模型只有四个，分别是：
 EZ 劫 Q技能 平a  这些模型的图片都可以召唤师峡谷中通过截屏找到-
除了将这些模型进行导入之外，我们还需要设置模型的碰撞体积和重心点，系统会根据前者来判断是否会发生碰撞事件，后者决定该物体的Position
以EZ为例： 
我们点击左边工具拦的最后一个，然后会出现一个由多个小正方形连接而成的方框，我们调整这些小正方形的位置，使它们紧贴着EZ的身体，便可以将EZ的碰撞体积缩小到模型本身的身体范围
然后是重心点的位置，我们点击左边工具栏的倒数第二个： 
可以看到出现一个小棱形，我们把这个小棱形的位置放到人物的中心中会更加合理
以同样方法可以创建另外3个模型，方法很简单，难的只是找到好看的素材
给模型添加动作方式 不同的模型可能会有不同的运动方式，比如EZ的运动方式是点到点的，因为我们是用鼠标右键来控制他的移动；而Q技能的运动方式是直线的，因为我们不应该保证Q一定能命中
以EZ为例，我们点击EZ这个模型，然后在左侧的状态栏里找到Behaviours这一栏，然后在最后有一个Add/edit Behaviours的选项，我们点击它： 
然后点击Add new behaviour，弹出： 
滑倒Movement部分中，我们可以看到这里有很多的运动方式可以添加，对于这些运动方式的区别请到官网查询文档，在这里EZ需要的运动方式是Move To方式，我们点击它，发现就会加入到已有的behaviours里面了
当然这里只是添加了一种移动的方式，如何控制它是在后面的事件触发行为中设置
以同样方式可以给另外3个对象也添加对应的移动方式</description>
    </item>
    
    <item>
      <title>How to install hugo on ubuntu</title>
      <link>https://hide-on-bush2.gitee.io/post/hugo_setup/</link>
      <pubDate>Tue, 15 Sep 2020 22:30:49 +0800</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/post/hugo_setup/</guid>
      <description>Use Hugo on Ubuntu 关键一步 在~/.bashrc上加上：
export PATH=$PATH:/usr/local/bin/hugo</description>
    </item>
    
    <item>
      <title>ML-Perceptron Model</title>
      <link>https://hide-on-bush2.gitee.io/post/ml/</link>
      <pubDate>Tue, 15 Sep 2020 22:30:49 +0800</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/post/ml/</guid>
      <description>机器学习之朴素贝叶斯法 简介 朴素贝叶斯法是一种分类方法，主要是从训练集中根据统计规律学得分类方法。对于给定的输入x，利用贝叶斯定理求出后验概率最高的类别y
基本方法和推导  Input:$x = (x^{(1)}, x^{(2)}, ..., x^{n})$，为输入变量的特征向量 Output:类别$y\in {c_1, c_2, ..., c_k}$  定义$X$为输入空间上的随机变量，$Y$是输出空间中的随机变量，我们要求的便是$max_{k}(p(Y = c_k|X=x))$，具体的方法是求出每一个$P_k(Y=c_k|X=x)$，然后选择概率最大的那个分类。
这个概率是后验概率，没办法直接通过统计数据得来（关于先验概率和后验概率），所以需要利用到贝叶斯定理： \(P(Y=c_k|X=x) = \frac{P(Y=c, X=x)}{P(X=x)} = \\\frac{P(X=x|Y=c_k)P(Y=c_k))}{\sum_kP(X=x|Y=c_k)P(Y=c_k)} \tag{1}\) 这里为了降低计算的复杂度做了一个合理的假设：输入空间中的特征都是不相关的，则： \(P(X=x|Y=c_k) = P(X^{(1)} = x^{(1)}, X^{(2)} \\= x^{(2)}, ..., X^{(n)} = x^{(n)}|Y=c_k) \\= \Pi_{j=1}^nP(X^{(j)}=x^{(k)}|Y=c_k) \tag{2}\) 这也是为什么叫“朴素贝叶斯法”（naive bayes），是通过合理性假设简化了运算的缘故。 则将（2）式代入到（1）式可以得到： \(P(Y=c_k|X=x) \\= \frac{P(Y=c_k)\Pi_{j}P(X^{(j)} \\= x^{(j)}|Y=c_k)}{\sum_kP(Y=c_k)\Pi_{j}P(X^{(j)} = x^{(j)}|Y=c_k)} \tag{3}\) 这里令$P^{&#39;}_k = P(Y=ck)\Pi{j}P(X^{(j)} = x^{(j)}|Y=c_k)$，则（3）式可变为： \(P(Y=c_k|X=x) = \frac{P^{&#39;}_k}{\sum_kP^{&#39;}_k}\tag{4}\) 很明（4）分母对于一个训练集来说是一个定植，那么我们的朴素贝叶斯分类器便可以表示为： \(y = argmaxP^{&#39;}_k \\= argmaxP(Y=c_k)\Pi_{j}P(X^{(j)} = x^{(j)}|Y=c_k)\tag{5}\)</description>
    </item>
    
    <item>
      <title>用电路做加法</title>
      <link>https://hide-on-bush2.gitee.io/post/circuit/</link>
      <pubDate>Tue, 15 Sep 2020 22:30:49 +0800</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/post/circuit/</guid>
      <description>使用EveryCircuit来做电路实验 任务0：验证非门 电路图如下：

输入为1：

输入为0：

真值表为：
   INPUT OUTPUT     0 1   1 0    任务1：建立一个简单的电路 电路图如下：

测试结果如下：
   
真值表如下：
   In A In B OUTPUT     0 0 0   0 1 0   1 0 0   1 1 1    任务2：验证电路等价 电路图：</description>
    </item>
    
    <item>
      <title>Markdown Grammer</title>
      <link>https://hide-on-bush2.gitee.io/post/markdown/</link>
      <pubDate>Tue, 15 Sep 2020 22:20:36 +0800</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/post/markdown/</guid>
      <description>Markdown Hello there! I’m Markdown, the Markdown editor for OS X.
Let me introduce myself.
Markdown and I Markdown is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel.
I support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the Markdown preference pane.</description>
    </item>
    
    <item>
      <title>Word explanation</title>
      <link>https://hide-on-bush2.gitee.io/homework/homework1/</link>
      <pubDate>Fri, 11 Sep 2020 11:00:59 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/homework/homework1/</guid>
      <description>H1-Introduction to Software Engineering Computer A computer is a machine that can be instructed to carry out sequences of arithmetic or logical operations automatically via computer programming. Modern computers have the ability to follow generalized sets of operations, called programs. These programs enable computers to perform an extremely wide range of tasks. A &amp;ldquo;complete&amp;rdquo; computer including the hardware, the operating system (main software), and peripheral equipment required and used for &amp;ldquo;full&amp;rdquo; operation can be referred to as a computer system.</description>
    </item>
    
    <item>
      <title>Chapter VI: Esmeralda</title>
      <link>https://hide-on-bush2.gitee.io/post/chapter-6/</link>
      <pubDate>Fri, 14 Apr 2017 11:25:05 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/post/chapter-6/</guid>
      <description>We are delighted to be able to inform the reader, that during the whole of this scene, Gringoire and his piece had stood firm. His actors, spurred on by him, had not ceased to spout his comedy, and he had not ceased to listen to it. He had made up his mind about the tumult, and was determined to proceed to the end, not giving up the hope of a return of attention on the part of the public.</description>
    </item>
    
    <item>
      <title>Chapter V: Quasimodo</title>
      <link>https://hide-on-bush2.gitee.io/post/chapter-5/</link>
      <pubDate>Thu, 13 Apr 2017 11:15:58 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/post/chapter-5/</guid>
      <description>In the twinkling of an eye, all was ready to execute Coppenole’s idea. Bourgeois, scholars and law clerks all set to work. The little chapel situated opposite the marble table was selected for the scene of the grinning match. A pane broken in the pretty rose window above the door, left free a circle of stone through which it was agreed that the competitors should thrust their heads. In order to reach it, it was only necessary to mount upon a couple of hogsheads, which had been produced from I know not where, and perched one upon the other, after a fashion.</description>
    </item>
    
    <item>
      <title>Chapter IV: Master Jacques Coppenole</title>
      <link>https://hide-on-bush2.gitee.io/post/chapter-4/</link>
      <pubDate>Wed, 12 Apr 2017 11:14:48 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/post/chapter-4/</guid>
      <description>While the pensioner of Ghent and his eminence were exchanging very low bows and a few words in voices still lower, a man of lofty stature, with a large face and broad shoulders, presented himself, in order to enter abreast with Guillaume Rym; one would have pronounced him a bull-dog by the side of a fox. His felt doublet and leather jerkin made a spot on the velvet and silk which surrounded him.</description>
    </item>
    
    <item>
      <title>Chapter III: Monsieur the Cardinal</title>
      <link>https://hide-on-bush2.gitee.io/post/chapter-3/</link>
      <pubDate>Tue, 11 Apr 2017 11:13:32 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/post/chapter-3/</guid>
      <description>Poor Gringoire! the din of all the great double petards of the Saint-Jean, the discharge of twenty arquebuses on supports, the detonation of that famous serpentine of the Tower of Billy, which, during the siege of Paris, on Sunday, the twenty-sixth of September, 1465, killed seven Burgundians at one blow, the explosion of all the powder stored at the gate of the Temple, would have rent his ears less rudely at that solemn and dramatic moment, than these few words, which fell from the lips of the usher, “His eminence, Monseigneur the Cardinal de Bourbon.</description>
    </item>
    
    <item>
      <title>Chapter II: Pierre Gringoire</title>
      <link>https://hide-on-bush2.gitee.io/post/chapter-2/</link>
      <pubDate>Mon, 10 Apr 2017 11:00:59 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/post/chapter-2/</guid>
      <description>Nevertheless, as be harangued them, the satisfaction and admiration unanimously excited by his costume were dissipated by his words; and when he reached that untoward conclusion: “As soon as his illustrious eminence, the cardinal, arrives, we will begin,” his voice was drowned in a thunder of hooting.
“Begin instantly! The mystery! the mystery immediately!” shrieked the people. And above all the voices, that of Johannes de Molendino was audible, piercing the uproar like the fife’s derisive serenade: “Commence instantly!</description>
    </item>
    
    <item>
      <title>Chapter I: The Grand Hall</title>
      <link>https://hide-on-bush2.gitee.io/post/chapter-1/</link>
      <pubDate>Sun, 09 Apr 2017 10:58:08 -0400</pubDate>
      
      <guid>https://hide-on-bush2.gitee.io/post/chapter-1/</guid>
      <description>Three hundred and forty-eight years, six months, and nineteen days ago to-day, the Parisians awoke to the sound of all the bells in the triple circuit of the city, the university, and the town ringing a full peal.
The sixth of January, 1482, is not, however, a day of which history has preserved the memory. There was nothing notable in the event which thus set the bells and the bourgeois of Paris in a ferment from early morning.</description>
    </item>
    
  </channel>
</rss>
